甘文光同学：
首先提出了题目由于O(1)的时间复杂度 因此使用双指针的方法进行
经袁老师修正指出，由于部分同学可能还没看过这个题目或者没有做出这道题目，因此需要先分析
原始方法再分析更好的方法
因此甘文光同学后续提出了C语言实现的双重循环遍历，先循环第一遍，找到第一个等于Val的下标
之后再对该下标之后的数组元素进行遍历 将后续的数组元素往前移动 将Val下标元素进行覆盖
袁老师点评：学生准备不够充分，没有达到展示效果 应该先提出native方法 再提出更好的方法 
更好的方法为什么更好 从哪些方面进行提高


李勃朝同学：首先提出了遍历寻找的方式 但是题目要求时间复杂度O(logn)  因此寻找该复杂度的算法为二分法
因此使用二分搜索查找 来进行寻找左右边界
首先使用二分法进行查找左右边界  但是没有考虑边界条件
例如数组元素为空或者只有单元素时
最后提出了一种其它方法 使用二分法+左右扩散的方法
即先使用先使用二分法找到target 再使用左右扩散寻找
第一个不等于target的下标 使用左+1,右-1即为区域边界
袁老师点评：该同学准备充分，讲题有理有据 使用了ppt以及题解动画的形式
由于第一个月采用皆为数据结构层次的题目 因此应该着重使用数据结构来进行解题
例如二分法其实使用的的是二分查找树的结构 我们可以使用树+顺序表的结构来进行解题

朱锟同学：首先分析了题干内容 确定思路为归并思想 将大的数组归并
起来 使用比较大小的方式
先将数组所有元素平方 然后比较大小
将最大的放入数组 遍历数组逆序依次比较放入 返回排序后的数组结构
之后进行了总结该题目使用的一些知识点 例如推导式等内容
并提出了其它解决方案 例如排序方法 为O(nlogn)
袁老师点评：讲的很好 思路清晰 有总结和ppt演示
其实解题思路应该是由于我们可以发现了关键点
是一个规律 题目列表 平方之后 数组列表
根据0左右顺序 左边界-->0 降序 0-->右边界 升序
即在0周围升序往外面扩展

金思铭同学：首先分析题干内容 确定思路为顺时针遍历
继而使用动画ppt进行思路展示 定义left right top bottom
四个边界 循环从左到右 从上到下 从右到左 从下到上
袁老师：思路很清晰 定义四个边界指针 在定义遍历指针
顺时针遍历即可 
但是是不是有其他更好的方法呢？可以思考一下
由于思路就是顺时针走动 因此其实知道方阵大小之后
就可以计算出各位置数值
思考 1、如果将顺时针方向 改变成参数 即方向参数化 可以分为
顺时针 逆时针 方向
那原来的方式就无法满足此类情况 不灵活
2、起始点 参数化 从某个点开始 顺时针或者逆时针
我们应该灵活化处理 逻辑不能硬板 可以使代码有弹性





